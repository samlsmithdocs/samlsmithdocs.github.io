{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"SAMLSmith","text":"<p>An officially unofficial guide to learning and using the SAMLSmith SAML response forging tool, mostly written in passive tense.</p>"},{"location":"#overview","title":"Overview","text":"<p>SAMLSmith is a multipurpose SAML response forging tool written in C#. It is designed to allow you to forge/spoof a SAML response that would have been generated by an identity provider (IdP), sent to an application, referred to as a service provider (SP) in SAML.</p> <p>If you can forge a SAML response, you can effectively act as the identity provider, and gain access to the application as the target user.</p> <p>SAML response forging does have one big prerequisite - the ability to obtain the private key. In some instances, depending on how the SAML SP is configured, adding a new signing key-pair may work, however, you still need the ability to access the signing key.</p> <p>There are cases of finding private key material lying around as PKCS#12 archives, .pfx files - think file shares and the such, and a text file or CSV with the associated password(s). These would be the cases where, if any of those key-pairs are used for SAML response signing, that you could leverage them to forge a SAML response. In all the cloud Identity-as-a-service (IDaaS) platforms we have encountered, this is the case. That is, we have not seen an IDaaS that permitted exporting of the private signing key.</p> <p>Alternatively, specific to \"on-prem\" systems like Active Directory Federation Services (AD FS), the private key material can be extracted from the system. AD FS has been a particular area of focus and research, particularly as it was a post-breach point of compromise during the Solorigate incident.</p> <p>Full details of other research and tools that we know of can be found in Tools and Research.</p> <p>The purpose of this guide is to help you understand SAML response forging, as well as how to perform it. Further, the guide contains some basic information about difference mechanisms of SAML and how they can, or cannot, defend against response forging.</p> <p>SAMLSmith must be compiled before use.</p> <p>If you believe something is missing that should be included in any part of this, have suggestions, edits, etc. please let us know by opening an issue on the docs.</p> <p>If you are concerned with something regarding the code itself, suggestions, bugs, etc. please let us know by opening an issue on the SAMLSmith repo.</p>"},{"location":"#docs-overview","title":"Docs Overview","text":""},{"location":"#using-samlsmith","title":"Using SAMLSmith","text":"<p>For help getting started with SAMLSmith.</p>"},{"location":"#saml-dictionary","title":"SAML Dictionary","text":"<p>A dictionary of common SAML terminology and it's meaning.</p>"},{"location":"#mechanics-of-saml","title":"Mechanics of SAML","text":"<p>Details on how SAML functions including flow diagrams.</p>"},{"location":"#identity-providers","title":"Identity Providers","text":"<p>Information on identity providers relating to SAML response forging.</p>"},{"location":"#defense-and-detection","title":"Defense and Detection","text":"<p>What can be done for mitigation and detection of SAML response forging.</p>"},{"location":"#other-tools-and-research","title":"Other Tools and Research","text":"<p>Information regarding other research and tools relating to SAML response forging.</p>"},{"location":"defense/","title":"Defense and Detection","text":""},{"location":"dictionary/","title":"SAML Dictionary","text":""},{"location":"identityproviders/","title":"Identity Providers","text":"<p>Not every identity provider is susceptible to resposne forging. And even those that are may require a different level of work to obtain the private key material needed for response forging.</p> <p>Note that the ability to forge a SAML response from a specific identity provider does not make a statement about the overall security posture of the identity provider. As signing key material can be left \"laying around\" by administrators, finding the signing key material does not indicate that there is anything inherently insecure about the identity provider itself.</p> <p>At the core of it, for each identity provider you want to forge a response for, the identity provider must either:</p> <ul> <li>Offer a way to export the private key used for signing.</li> <li>Offer a way to import an external private key for signing.</li> </ul> <p>This document provides information on the following types of identity providers:</p> <ul> <li>Those where response forging has been tested with SAMLSmith.</li> <li>Those whose documentation shows that a it should be possible but have not been tested.</li> <li>Those whose documentation shows that it should not be possible to forge a SAML response.</li> </ul>"},{"location":"identityproviders/#samlsmith-tested","title":"SAMLSmith Tested","text":"<p>The following identity providers have had a response successfully forged by SAMLSmith</p>"},{"location":"identityproviders/#microsoft-entra-id","title":"Microsoft Entra ID","text":"<p>https://learn.microsoft.com/en-us/entra/identity/</p>"},{"location":"identityproviders/#pingidentity-pingone-for-workforce","title":"PingIdentity PingOne for Workforce","text":"<p>https://docs.pingidentity.com/pingone/release_notes/index.html</p>"},{"location":"identityproviders/#microsoft-active-directory-federation-services-ad-fs","title":"Microsoft Active Directory Federation Services (AD FS)","text":"<p>https://learn.microsoft.com/en-us/windows-server/identity/ad-fs/ad-fs-overview</p>"},{"location":"identityproviders/#jumpcloud","title":"Jumpcloud","text":"<p>https://jumpcloud.com/support/get-started</p>"},{"location":"identityproviders/#should-work-but-not-tested","title":"Should work but not tested","text":""},{"location":"identityproviders/#one-identity-onelogin","title":"One Identity OneLogin","text":"<p>https://onelogin.service-now.com/support?id=kb_view2</p> <p>According to the OneLogin documentation, support must set a flag on a OneLogin directory to permit the ability to upload a .pfx file for SAML response signing.</p> <p>In our demo environment used for exploratory testing, this was not enabled.</p>"},{"location":"identityproviders/#not-possible-as-far-as-we-know","title":"Not possible (as far as we know)","text":""},{"location":"identityproviders/#google-cloud-iam","title":"Google Cloud IAM","text":"<p>Google Cloud IAM provides the ability to roll certificates, but does not appear to offer the ability to import an external private key for signing.</p>"},{"location":"identityproviders/#okta","title":"Okta","text":"<p>Okta only supports an exteral keypair through the use of a CSR. Therefore, Okta is generating and holding the private key at all times. It is not possible to export the keypair through Okta APIs.</p>"},{"location":"saml/","title":"Mechanics of SAML","text":""},{"location":"tools/","title":"Tools and Research","text":"<p>Other tools and research related to SAML response forging.</p> <p>This list is probably not complete; if you feel something is missing here please let us know by opening an issue on the docs.</p> <p>Thank you to Dr. Nestori Synnimaa (@DrAzureAD) in particular who outlines a lot of the history from his talk Eight ways to compromise AD FS certificates.</p>"},{"location":"tools/#tools","title":"Tools","text":""},{"location":"tools/#adfsdump","title":"ADFSDump","text":"<p>Doug Bienstock</p> <p>ADFSDump is a C# tool that can be used to extract the signing key material from an ADF FS environment needed to forge a SAML response. Much appreciation to Doug as the code for ADFSDump is integrated into SAMLSmith for the same purposes.</p>"},{"location":"tools/#adfspoof","title":"ADFSpoof","text":"<p>Doug Bienstock</p> <p>ADFSpoof is a python tool that will generate a signing key pair as a PKCS#12 archive from the data extracted by ADFSDump. It also will forge a SAML 1.1 response for Entra ID federated to AD FS (marked as o365 in the tool), Dropbox SAML 2.0 and generic SAML2 response.</p>"},{"location":"tools/#shimit","title":"shimit","text":"<p>Shak Reiner</p> <p>shimit is a python tool written to perform a SAML response forging attack. The tool's mission is written as a general purpose response forging tool, but the version released has a focus on SAML response forging from AD FS with a target SP of AWS.</p>"},{"location":"tools/#aadinternals","title":"AADInternals","text":"<p>Nestori Synnimaa</p> <p>AADInternals is a PowerShell Swiss army knife for Entra ID. Included in AADInternals are functions that allow for the extraction of the key material from an AD FS environment to forge a SAML response, as well as forge a SAML response for Entra ID (Office 365 in the tool).</p>"},{"location":"tools/#whiskeysaml-and-friends","title":"WhiskeySAML and Friends","text":"<p>Anthony Larcher-Gore, Kam Talebzadeh, Nestori Syynimaa</p> <p>WhiskeySAML and Friends is a framework and proof-of-concept for a Golden SAML attack with a slick web interface and a remote AD FS configuration extraction.</p>"},{"location":"tools/#_1","title":"Other Tools and Research","text":""},{"location":"tools/#research","title":"Research","text":""},{"location":"tools/#nestori-synnimaa","title":"Nestori Synnimaa","text":"<p>Security vulnerability in Azure AD &amp; Office 365 identity federation</p> <p>Exporting AD FS certificates revisited: Tactics, Techniques and Procedures</p>"},{"location":"tools/#roberto-rodriguez","title":"Roberto Rodriguez","text":"<p>Active Directory Federation Services (ADFS) Distributed Key Manager (DKM) Keys</p>"},{"location":"tools/#ned-pyle","title":"Ned Pyle","text":"<p>AD FS 2.0 Claims Rule Language Primer</p>"},{"location":"tools/#shak-reiner","title":"Shak Reiner","text":"<p>Golden SAML: Newly Discovered Attack Technique Forges Authentication to Cloud Apps</p>"},{"location":"tools/#doug-bienstock","title":"Doug Bienstock","text":"<p>Abusing AD FS Replication: Stealing AD FS Secrets Over the Network</p>"},{"location":"use/","title":"Using SAMLSmith","text":""}]}